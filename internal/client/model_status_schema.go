/*
Artifacts API

 Artifacts is an API-based MMO game where you can manage 5 characters to explore, fight, gather resources, craft items and much more.  Website: https://artifactsmmo.com/  Documentation: https://docs.artifactsmmo.com/  OpenAPI Spec: https://api.artifactsmmo.com/openapi.json 

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StatusSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusSchema{}

// StatusSchema struct for StatusSchema
type StatusSchema struct {
	// Server status
	Status string `json:"status"`
	// Game version.
	Version string `json:"version"`
	CharactersOnline *int32 `json:"characters_online,omitempty"`
	Announcements []AnnoncementSchema `json:"announcements,omitempty"`
	// Last server wipe.
	LastWipe string `json:"last_wipe"`
	// Next server wipe.
	NextWipe string `json:"next_wipe"`
}

type _StatusSchema StatusSchema

// NewStatusSchema instantiates a new StatusSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusSchema(status string, version string, lastWipe string, nextWipe string) *StatusSchema {
	this := StatusSchema{}
	this.Status = status
	this.Version = version
	this.LastWipe = lastWipe
	this.NextWipe = nextWipe
	return &this
}

// NewStatusSchemaWithDefaults instantiates a new StatusSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusSchemaWithDefaults() *StatusSchema {
	this := StatusSchema{}
	return &this
}

// GetStatus returns the Status field value
func (o *StatusSchema) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *StatusSchema) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *StatusSchema) SetStatus(v string) {
	o.Status = v
}

// GetVersion returns the Version field value
func (o *StatusSchema) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *StatusSchema) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *StatusSchema) SetVersion(v string) {
	o.Version = v
}

// GetCharactersOnline returns the CharactersOnline field value if set, zero value otherwise.
func (o *StatusSchema) GetCharactersOnline() int32 {
	if o == nil || IsNil(o.CharactersOnline) {
		var ret int32
		return ret
	}
	return *o.CharactersOnline
}

// GetCharactersOnlineOk returns a tuple with the CharactersOnline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusSchema) GetCharactersOnlineOk() (*int32, bool) {
	if o == nil || IsNil(o.CharactersOnline) {
		return nil, false
	}
	return o.CharactersOnline, true
}

// HasCharactersOnline returns a boolean if a field has been set.
func (o *StatusSchema) HasCharactersOnline() bool {
	if o != nil && !IsNil(o.CharactersOnline) {
		return true
	}

	return false
}

// SetCharactersOnline gets a reference to the given int32 and assigns it to the CharactersOnline field.
func (o *StatusSchema) SetCharactersOnline(v int32) {
	o.CharactersOnline = &v
}

// GetAnnouncements returns the Announcements field value if set, zero value otherwise.
func (o *StatusSchema) GetAnnouncements() []AnnoncementSchema {
	if o == nil || IsNil(o.Announcements) {
		var ret []AnnoncementSchema
		return ret
	}
	return o.Announcements
}

// GetAnnouncementsOk returns a tuple with the Announcements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusSchema) GetAnnouncementsOk() ([]AnnoncementSchema, bool) {
	if o == nil || IsNil(o.Announcements) {
		return nil, false
	}
	return o.Announcements, true
}

// HasAnnouncements returns a boolean if a field has been set.
func (o *StatusSchema) HasAnnouncements() bool {
	if o != nil && !IsNil(o.Announcements) {
		return true
	}

	return false
}

// SetAnnouncements gets a reference to the given []AnnoncementSchema and assigns it to the Announcements field.
func (o *StatusSchema) SetAnnouncements(v []AnnoncementSchema) {
	o.Announcements = v
}

// GetLastWipe returns the LastWipe field value
func (o *StatusSchema) GetLastWipe() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastWipe
}

// GetLastWipeOk returns a tuple with the LastWipe field value
// and a boolean to check if the value has been set.
func (o *StatusSchema) GetLastWipeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastWipe, true
}

// SetLastWipe sets field value
func (o *StatusSchema) SetLastWipe(v string) {
	o.LastWipe = v
}

// GetNextWipe returns the NextWipe field value
func (o *StatusSchema) GetNextWipe() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextWipe
}

// GetNextWipeOk returns a tuple with the NextWipe field value
// and a boolean to check if the value has been set.
func (o *StatusSchema) GetNextWipeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextWipe, true
}

// SetNextWipe sets field value
func (o *StatusSchema) SetNextWipe(v string) {
	o.NextWipe = v
}

func (o StatusSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["version"] = o.Version
	if !IsNil(o.CharactersOnline) {
		toSerialize["characters_online"] = o.CharactersOnline
	}
	if !IsNil(o.Announcements) {
		toSerialize["announcements"] = o.Announcements
	}
	toSerialize["last_wipe"] = o.LastWipe
	toSerialize["next_wipe"] = o.NextWipe
	return toSerialize, nil
}

func (o *StatusSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"version",
		"last_wipe",
		"next_wipe",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStatusSchema := _StatusSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStatusSchema)

	if err != nil {
		return err
	}

	*o = StatusSchema(varStatusSchema)

	return err
}

type NullableStatusSchema struct {
	value *StatusSchema
	isSet bool
}

func (v NullableStatusSchema) Get() *StatusSchema {
	return v.value
}

func (v *NullableStatusSchema) Set(val *StatusSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusSchema(val *StatusSchema) *NullableStatusSchema {
	return &NullableStatusSchema{value: val, isSet: true}
}

func (v NullableStatusSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


